SOURCES_CXX :=
SOURCES_C   :=

DEPS_DIR     := $(CORE_DIR)/deps
LIBRETRO_DIR := $(CORE_DIR)/libretro-common
MEDNAFEN_DIR := $(CORE_DIR)/mednafen
CORE_EMU_DIR := $(MEDNAFEN_DIR)/ss
CDROM_DIR    := $(MEDNAFEN_DIR)/cdrom

INCFLAGS := -I$(CORE_DIR) -I$(MEDNAFEN_DIR) -I$(MEDNAFEN_DIR)/include -I$(MEDNAFEN_DIR)/intl -I$(MEDNAFEN_DIR)/hw_sound -I$(MEDNAFEN_DIR)/hw_cpu -I$(MEDNAFEN_DIR)/hw_misc -I$(LIBRETRO_DIR)/include -I$(DEPS_DIR)/zlib


SOURCES_C += $(DEPS_DIR)/zlib/adler32.c \
				 $(DEPS_DIR)/zlib/compress.c \
				 $(DEPS_DIR)/zlib/crc32.c \
				 $(DEPS_DIR)/zlib/deflate.c \
				 $(DEPS_DIR)/zlib/gzclose.c \
				 $(DEPS_DIR)/zlib/gzlib.c \
				 $(DEPS_DIR)/zlib/gzread.c \
				 $(DEPS_DIR)/zlib/gzwrite.c \
				 $(DEPS_DIR)/zlib/inffast.c \
				 $(DEPS_DIR)/zlib/inflate.c \
				 $(DEPS_DIR)/zlib/inftrees.c \
				 $(DEPS_DIR)/zlib/trees.c \
				 $(DEPS_DIR)/zlib/uncompr.c \
				 $(DEPS_DIR)/zlib/zutil.c

ifeq ($(HAVE_GRIFFIN),1)
SOURCES_CXX += beetle_ss_griffin.cpp

SOURCES_C += beetle_ss_griffin_c.c
endif

ifeq ($(NEED_THREADING), 1)
   FLAGS += -DWANT_THREADING -DHAVE_THREADS
endif

ifeq ($(NEED_CRC32), 1)
   FLAGS += -DWANT_CRC32
	SOURCES_C += $(CORE_DIR)/scrc32.c
endif

ifeq ($(NEED_DEINTERLACER), 1)
   FLAGS += -DNEED_DEINTERLACER
endif

ifeq ($(IS_64BIT), 1)
FLAGS += -DSIZEOF_VOID_P=8
else
FLAGS += -DSIZEOF_VOID_P=4
endif

ifeq ($(IS_X86), 1)
FLAGS += -DARCH_X86
endif

ifeq ($(NEED_BPP), 8)
FLAGS += -DWANT_8BPP
endif

ifeq ($(NEED_BPP), 16)
FLAGS += -DWANT_16BPP
endif

ifeq ($(NEED_BPP), 32)
FLAGS += -DWANT_32BPP
endif

ifeq ($(WANT_NEW_API), 1)
FLAGS += -DWANT_NEW_API
endif

ifeq ($(NO_COMPUTED_GOTO), 1)
FLAGS += -DNO_COMPUTED_GOTO
endif

ifeq ($(FRONTEND_SUPPORTS_RGB565), 1)
FLAGS += -DFRONTEND_SUPPORTS_RGB565
endif

ifeq ($(NEED_CD), 1)
   FLAGS += -DNEED_CD
endif

ifeq ($(HAVE_CHD), 1)
   FLAGS += -DHAVE_CHD -D_7ZIP_ST -DPACKAGE_VERSION=\"1.3.2\" -DFLAC_API_EXPORTS -DFLAC__HAS_OGG=0 -DHAVE_LROUND -DHAVE_STDINT_H -DHAVE_STDLIB_H -DHAVE_SYS_PARAM_H
   INCFLAGS += -I$(DEPS_DIR)/crypto -I$(DEPS_DIR)/flac-1.3.2/include -I$(DEPS_DIR)/flac-1.3.2/src/libFLAC/include -I$(DEPS_DIR)/lzma-16.04/C -I$(DEPS_DIR)/libchdr

   ifeq ($(platform), win)
       FLAGS += -DHAVE_FSEEKO
   endif
endif

ifeq ($(NEED_TREMOR), 1)
   FLAGS += -DNEED_TREMOR
endif

ifneq ($(HAVE_GRIFFIN), 1)
   SOURCES_CXX += \
	$(CORE_EMU_DIR)/db.cpp \
	$(CORE_EMU_DIR)/cdb.cpp \
	$(CORE_EMU_DIR)/sound.cpp \
	$(CORE_EMU_DIR)/cart.cpp \
	$(CORE_EMU_DIR)/scu_dsp_gen.cpp \
	$(CORE_EMU_DIR)/scu_dsp_mvi.cpp \
	$(CORE_EMU_DIR)/scu_dsp_jmp.cpp \
	$(CORE_EMU_DIR)/scu_dsp_misc.cpp \
	$(CORE_EMU_DIR)/vdp1.cpp \
	$(CORE_EMU_DIR)/vdp1_line.cpp \
	$(CORE_EMU_DIR)/vdp1_sprite.cpp \
	$(CORE_EMU_DIR)/vdp1_poly.cpp \
	$(CORE_EMU_DIR)/vdp2.cpp \
	$(CORE_EMU_DIR)/vdp2_render.cpp \
	$(CORE_EMU_DIR)/smpc.cpp \
	$(CORE_EMU_DIR)/input/gamepad.cpp \
	$(CORE_EMU_DIR)/input/gun.cpp \
	$(CORE_EMU_DIR)/input/3dpad.cpp \
	$(CORE_EMU_DIR)/input/mouse.cpp \
	$(CORE_EMU_DIR)/input/multitap.cpp \
	$(CORE_EMU_DIR)/input/mission.cpp \
	$(CORE_EMU_DIR)/input/keyboard.cpp \
	$(CORE_EMU_DIR)/input/jpkeyboard.cpp \
	$(CORE_EMU_DIR)/input/wheel.cpp

SOURCES_CXX += \
					$(CORE_EMU_DIR)/cart/backup.cpp \
					$(CORE_EMU_DIR)/cart/cs1ram.cpp \
					$(CORE_EMU_DIR)/cart/debug.cpp \
					$(CORE_EMU_DIR)/cart/extram.cpp \
					$(CORE_EMU_DIR)/cart/rom.cpp \
					$(CORE_EMU_DIR)/cart/ar4mp.cpp

SOURCES_CXX += $(MEDNAFEN_DIR)/hw_cpu/m68k/m68k.cpp

SOURCES_C += $(CORE_DIR)/libretro_cbs.c

ifeq ($(NEED_TREMOR), 1)
   SOURCES_C += $(wildcard $(MEDNAFEN_DIR)/tremor/*.c)
endif

ifneq ($(HAVE_GRIFFIN),1)
SOURCES_CXX += $(CDROM_DIR)/CDAccess.cpp \
	$(CDROM_DIR)/CDAccess_Image.cpp \
	$(CDROM_DIR)/CDAccess_CCD.cpp \
	$(CDROM_DIR)/CDAFReader.cpp \
	$(CDROM_DIR)/CDAFReader_Vorbis.cpp \
	$(CDROM_DIR)/cdromif.cpp \
	$(CDROM_DIR)/CDUtility.cpp \
	$(CDROM_DIR)/lec.cpp \
	$(CDROM_DIR)/galois.cpp \
	$(CDROM_DIR)/recover-raw.cpp \
	$(CDROM_DIR)/l-ec.cpp \
	$(CDROM_DIR)/edc_crc32.cpp
endif
   FLAGS += -DNEED_CD

ifeq ($(HAVE_CHD), 1)
SOURCES_C += \
	$(DEPS_DIR)/crypto/md5.c \
	$(DEPS_DIR)/crypto/sha1.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/bitmath.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/bitreader.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/cpu.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/crc.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/fixed.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/fixed_intrin_sse2.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/fixed_intrin_ssse3.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/float.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/format.c \
 	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/lpc.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/lpc_intrin_avx2.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/lpc_intrin_sse2.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/lpc_intrin_sse41.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/lpc_intrin_sse.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/md5.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/memory.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/metadata_iterators.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/metadata_object.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/stream_decoder.c \
	$(DEPS_DIR)/flac-1.3.2/src/libFLAC/window.c \
	$(DEPS_DIR)/lzma-16.04/C/Alloc.c \
	$(DEPS_DIR)/lzma-16.04/C/Bra86.c \
	$(DEPS_DIR)/lzma-16.04/C/Bra.c \
	$(DEPS_DIR)/lzma-16.04/C/BraIA64.c \
	$(DEPS_DIR)/lzma-16.04/C/CpuArch.c \
	$(DEPS_DIR)/lzma-16.04/C/Delta.c \
	$(DEPS_DIR)/lzma-16.04/C/LzFind.c \
	$(DEPS_DIR)/lzma-16.04/C/Lzma86Dec.c \
	$(DEPS_DIR)/lzma-16.04/C/Lzma86Enc.c \
	$(DEPS_DIR)/lzma-16.04/C/LzmaDec.c \
	$(DEPS_DIR)/lzma-16.04/C/LzmaEnc.c \
 	$(DEPS_DIR)/lzma-16.04/C/LzmaLib.c \
	$(DEPS_DIR)/lzma-16.04/C/Sort.c \
	$(DEPS_DIR)/libchdr/bitstream.c \
	$(DEPS_DIR)/libchdr/cdrom.c \
	$(DEPS_DIR)/libchdr/chd.c \
	$(DEPS_DIR)/libchdr/flac.c \
	$(DEPS_DIR)/libchdr/huffman.c 

   ifneq (,$(findstring win,$(platform)))
       SOURCES_C += $(DEPS_DIR)/flac-1.3.2/src/libFLAC/windows_unicode_filenames.c
   endif

SOURCES_CXX += \
	$(CDROM_DIR)/CDAccess_CHD.cpp
endif

SOURCES_CXX += \
	$(MEDNAFEN_DIR)/error.cpp \
	$(MEDNAFEN_DIR)/settings.cpp \
	$(MEDNAFEN_DIR)/general.cpp \
	$(MEDNAFEN_DIR)/FileStream.cpp \
	$(MEDNAFEN_DIR)/MemoryStream.cpp \
	$(MEDNAFEN_DIR)/Stream.cpp \
	$(MEDNAFEN_DIR)/state.cpp \
	$(MEDNAFEN_DIR)/mempatcher.cpp \
	$(MEDNAFEN_DIR)/video/Deinterlacer.cpp \
	$(MEDNAFEN_DIR)/video/surface.cpp \
	$(MEDNAFEN_DIR)/git.cpp \
	$(CORE_DIR)/disc.cpp \
	$(CORE_DIR)/input.cpp \
	$(CORE_DIR)/libretro.cpp \
	$(CORE_DIR)/libretro_settings.cpp

SOURCES_C += $(MEDNAFEN_DIR)/mednafen-endian.c

SOURCES_CXX += $(MEDNAFEN_DIR)/hash/sha256.cpp \
					$(MEDNAFEN_DIR)/hash/md5.cpp

ifneq ($(STATIC_LINKING), 1)
SOURCES_C += $(LIBRETRO_DIR)/streams/file_stream.c \
				 $(LIBRETRO_DIR)/vfs/vfs_implementation.c \
				 $(LIBRETRO_DIR)/compat/compat_strl.c \
				 $(LIBRETRO_DIR)/compat/compat_strcasestr.c \
				 $(LIBRETRO_DIR)/compat/fopen_utf8.c \
				 $(LIBRETRO_DIR)/encodings/encoding_utf.c \
				 $(LIBRETRO_DIR)/string/stdstring.c

ifeq ($(NEED_THREADING), 1)
SOURCES_C += $(LIBRETRO_DIR)/rthreads/rthreads.c
endif

endif
endif

